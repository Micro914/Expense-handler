{"version":3,"sources":["components/UI/Card.jsx","components/Expenses/ExpensesFilter.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","e","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximun","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","array","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","changeHandler","name","onSubmit","preventDefault","enteredDateExtraDay","Date","setDate","getDate","expenseData","onSaveExpenseData","htmlFor","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f18deec9.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className\r\n    return (\r\n        <div className={classes}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const dropdownChangeHandler = (e) => {\r\n        props.onChangeFilter(e.target.value)\r\n    }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react'\r\nimport './ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__day'>{day}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate\r\n","import { React } from 'react'\r\nimport './ExpenseItem.css'\r\nimport ExpenseDate from './ExpenseDate'\r\nimport Card from '../UI/Card'\r\n\r\nconst ExpenseItem = (props) => {\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={props.date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ExpenseItem\r\n","import React from 'react'\r\nimport ExpenseItem from './ExpenseItem'\r\nimport './ExpensesList.css'\r\n\r\nconst ExpensesList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return <h2 className='expenses-list__fallback'>Found no expenses.</h2>\r\n    }\r\n\r\n    return <ul className='expenses-list' >\r\n        {\r\n            props.items.map(expense => (\r\n                <ExpenseItem\r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date} />\r\n            ))\r\n        }\r\n    </ul>\r\n}\r\n\r\nexport default ExpensesList\r\n","import React from 'react'\r\nimport './ChartBar.css'\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div className='chart-bar__fill' style={{height:barFillHeight}}></div>\r\n            </div>\r\n            <div className='chart-bar__label'>{props.label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar\r\n","import React from 'react'\r\nimport ChartBar from './ChartBar'\r\nimport './Chart.css'\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximun = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className='chart'>\r\n            {props.dataPoints.map(dataPoint => \r\n            <ChartBar\r\n            key={dataPoint.label}\r\n            value={dataPoint.value} \r\n            maxValue={totalMaximun} \r\n            label={dataPoint.label} \r\n            />) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React from 'react'\r\nimport Chart from '../Chart/Chart'\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dic', value: 0},\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Chart dataPoints={chartDataPoints}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpensesChart\r\n","import React, { useState } from 'react'\r\nimport Card from '../UI/Card'\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css'\r\n\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear)\r\n    }\r\n\r\n    let filteredExpenses = props.array.filter(year => year.date.getFullYear().toString() === filteredYear)\r\n    \r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter onChangeFilter={filterChangeHandler} selected={filteredYear} />\r\n            <ExpensesChart expenses={filteredExpenses}/>\r\n            <ExpensesList items={filteredExpenses} />\r\n            {/* {filteredExpenses.length !== 0 ?\r\n                (filteredExpenses.map(expense => (\r\n                    <ExpenseItem\r\n                        key={expense.id}\r\n                        title={expense.title}\r\n                        amount={expense.amount}\r\n                        date={expense.date} />\r\n                )))\r\n                : (expensesContent)} */}\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Expenses\r\n","import React, { useState } from 'react'\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    // const [userInput, setUserInput]= useState({\r\n    //     enteredTitle:'',\r\n    //     enteredAmount:'',\r\n    //     enteredDate:''\r\n    // })\r\n\r\n    const changeHandler = (e, name) => {\r\n        if (name === 'title') {\r\n            setEnteredTitle(e.target.value)\r\n            ////Not so good way of doing it\r\n            // setUserInput({\r\n            //     ...userInput,\r\n            //     enteredTitle: e.target.value\r\n            // })\r\n            ////Better way\r\n            // setUserInput((prevState) => {\r\n            //     return {...prevState, enteredTitle:e.target.value};\r\n            // })\r\n        }\r\n        else if (name === 'amount') {\r\n            setEnteredAmount(e.target.value)\r\n            ////Not so good way of doing it\r\n            // setUserInput({\r\n            //     ...userInput,\r\n            //     enteredAmount: e.target.value\r\n            // })\r\n            ////Better way\r\n            // setUserInput((prevState) => {\r\n            //     return {...prevState, enteredAmount:e.target.value};\r\n            // })\r\n        }\r\n        else if (name === 'date') {\r\n            setEnteredDate(e.target.value)\r\n            ////Not so good way of doing it\r\n            // setUserInput({\r\n            //     ...userInput,\r\n            //     enteredDate: e.target.value\r\n            // })\r\n            ////Better way\r\n            // setUserInput((prevState) => {\r\n            //     return {...prevState, enteredDate:e.target.value};\r\n            // })\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const enteredDateExtraDay = new Date(enteredDate);\r\n        enteredDateExtraDay.setDate(enteredDateExtraDay.getDate() + 1);\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: enteredDateExtraDay\r\n        }\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={submitHandler}>\r\n                <div className='new-expense__controls'>\r\n                    <div className='new-expense__control'>\r\n                        <label htmlFor=\"\">Title</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={enteredTitle}\r\n                            onChange={(e, name = 'title') => changeHandler(e, name)} />\r\n                    </div>\r\n                    <div className='new-expense__control'>\r\n                        <label htmlFor=\"\">Amount</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={enteredAmount}\r\n                            onChange={(e, name = 'amount') => changeHandler(e, name)}\r\n                            min='0.01'\r\n                            step='0.01' />\r\n                    </div>\r\n                    <div className='new-expense__control'>\r\n                        <label htmlFor=\"\">Date</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={enteredDate}\r\n                            onChange={(e, name = 'date') => changeHandler(e, name)}\r\n                            min='2019-01-01'\r\n                            max='2022-12-31' />\r\n                    </div>\r\n                </div>\r\n                <div className='new-expense__actions'>\r\n                    <button type='button' onClick={props.onCancel}>Cancel</button>\r\n                    <button type='submit'>Add Expense</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm\r\n","import React, {useState} from 'react'\r\nimport './NewExpense.css'\r\nimport ExpenseForm from './ExpenseForm'\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [isEditing, setIsEditing]=useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        }\r\n        props.onAddExpense(expenseData)\r\n        setIsEditing(false);\r\n    }\r\n\r\n    const startEditingHandler = () =>{\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const stopEditingHandler = () =>{\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n            {isEditing &&<ExpenseForm onCancel={stopEditingHandler} onSaveExpenseData={saveExpenseDataHandler} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense\r\n","import React, {useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { \n    id: 'e2', \n    title: 'New TV', \n    amount: 799.49, \n    date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n\n  const [expenses, setExpenses]=useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses]\n    })\n    console.log('Mensaje desde abuelo', expense)\n  }\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses array={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}